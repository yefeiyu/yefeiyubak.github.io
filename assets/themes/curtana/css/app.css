.cf:before,
.cf:after {
  display: table;
  content: "";
}
.cf:after {
  clear: both;
}
*,
*:before,
*:after {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
html {
  font-size: 100%;
  -webkit-text-size-adjust: none;
      -ms-text-size-adjust: none;
          text-size-adjust: none;
  text-rendering: optimizelegibility;
  image-rendering: optimizequality;
  background: #fff;
}
body {
  padding: 0 22vw;
  margin: 0 auto 0;
  font-family: -apple-system, BlinkMacSystemFont, "Helvetica Neue", "Hiragino Sans GB", Arial, sans-serif;
  font-size: 1.6vw;
  line-height: 1.42857143;
  color: #000;
  background: #fff;
  transition: all .2s ease;
  font-feature-settings: "case", "ss01", "ss02";
}
@media (max-width: 1080px) {
  body {
    padding-left: 8vw;
    padding-right: 8vw;
    font-size: 2.24vw;
  }
}
@media (max-width: 640px) {
  body {
    padding-left: 4vw;
    padding-right: 4vw;
    font-size: 3.84vw;
  }
}
@media (max-width: 400px) {
  body {
    font-size: 5.12vw;
  }
}
body:before {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 1vmax;
  pointer-events: none;
  background: #ff00b4;
  content: "";
  opacity: .2;
}
input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}
button,
input,
select[multiple],
textarea {
  background-image: none;
}
a,
button {
  color: #000;
  text-decoration: none;
  transition: color 0.5s ease, border-color 0.5s ease, background 0.5s ease, opacity 1.5s ease;
}
a:hover,
button:hover,
a:focus,
button:focus {
  transition: color 0.1s ease, border-color 0.1s ease, background 0.1s ease, opacity 0.1s ease;
  text-decoration: underline;
  -webkit-text-decoration-skip: ink;
          text-decoration-skip: ink;
}
a[disabled],
button[disabled] {
  opacity: .4;
  cursor: not-allowed;
}
button {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  cursor: pointer;
  background: none;
  border: none;
  outline: none;
}
img,
hr {
  border: 0;
}
del {
  text-decoration: line-through;
}
::-moz-selection {
  background: rgba(255, 0, 180, 0.1);
}
::selection {
  background: rgba(255, 0, 180, 0.1);
}
::-webkit-input-placeholder {
  color: #000;
  opacity: .2;
}
::-moz-placeholder {
  color: #000;
  opacity: .2;
}
:-ms-input-placeholder {
  color: #000;
  opacity: .2;
}
::placeholder {
  color: #000;
  opacity: .2;
}
:focus::-webkit-input-placeholder {
  color: #ff00b4;
}
:focus::-moz-placeholder {
  color: #ff00b4;
}
:focus:-ms-input-placeholder {
  color: #ff00b4;
}
:focus::placeholder {
  color: #ff00b4;
}
.navigation {
  padding-top: 1.4vmax;
  padding-bottom: 1.4vmax;
  margin-right: -1.6em;
  margin-left: -1.6em;
  font-size: 60%;
  font-weight: bold;
  letter-spacing: .28em;
  text-transform: uppercase;
}
.navigation li {
  display: inline-block;
  line-height: 2;
  list-style: none;
}
.navigation li a {
  padding: .5em 1.2em;
}
.navigation li a:hover,
.navigation li a:focus {
  color: #ff00b4;
  text-decoration: none;
}
.current a {
  color: #ff00b4;
}
body:hover .latest {
  color: #ff00b4 !important;
}
.content {
  margin-bottom: 16vmin;
}
.content:before,
.content:after {
  display: table;
  content: "";
}
.content:after {
  clear: both;
}
.content article > *:last-child {
  margin-bottom: 0 !important;
}
.content article > *:last-child > *:last-child {
  margin-bottom: 0 !important;
}
.content article > *:last-child > *:last-child > *:last-child {
  margin-bottom: 0 !important;
}
.content article > *:last-child > *:last-child > *:last-child > *:last-child {
  margin-bottom: 0 !important;
}
.content .post-content > *:first-child,
.content .page-content > *:first-child {
  margin-top: 0;
}
.content .post-content > *:first-child > *:first-child,
.content .page-content > *:first-child > *:first-child {
  margin-top: 0;
}
.content a {
  font-weight: bold;
}
.content a:has(>code) {
  color: #293e30;
}
.content p {
  margin-bottom: 1.6rem;
  line-height: 1.71428571;
}
.content header {
  display: flex;
  min-height: calc(100vh - 5.6vmax - 5ex);
  padding-top: 10vmin;
  padding-bottom: 10vmin;
  margin-bottom: 16vmin;
  flex-direction: column;
  justify-content: center;
  background: rgba(0, 0, 0, 0.02);
  padding-left: 22vw;
  padding-right: 22vw;
  margin-left: -22vw;
  margin-right: -22vw;
}
@media (max-width: 1080px) {
  .content header {
    min-height: calc(64vh - 1.4vmax * 2 - 3ex);
    padding-top: 16vmin;
    padding-bottom: 16vmin;
    padding-left: 8vw;
    padding-right: 8vw;
    margin-left: -8vw;
    margin-right: -8vw;
  }
}
@media (max-width: 640px) {
  .content header {
    padding-left: 4vw;
    padding-right: 4vw;
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content header h1 {
  font-size: 360%;
  -webkit-font-smoothing: antialiased;
  font-weight: bold;
  letter-spacing: -0.04em;
  margin-left: -2px;
  -webkit-hyphens: none;
      -ms-hyphens: none;
          hyphens: none;
  line-height: 1.1;
}
@media (max-width: 640px) {
  .content header h1 {
    font-size: 280%;
  }
}
.content header h1 svg {
  display: block;
  max-width: 100%;
}
.content header h1 svg,
.content header h1 img {
  margin-left: 0;
  margin-right: 0;
  margin-bottom: .3em;
}
@media (max-width: 640px) {
  .content header h1 svg,
  .content header h1 img {
    width: 100% !important;
    height: 100% !important;
  }
}
.content header h2 {
  margin: 1.2vmin 0 0;
}
.content header .image-title {
  text-indent: -999999px;
  line-height: 0;
}
.content header small {
  display: block;
  margin-top: 2vmin;
}
.content h2,
.content h3,
.content h4,
.content h5,
.content h6 {
  margin: 10vmin 0 1rem;
  font-size: 72%;
  font-weight: normal;
  opacity: .5;
}
.content ul,
.content ol {
  margin-bottom: 1.8rem;
  list-style: none;
  counter-reset: list;
}
@media (max-width: 640px) {
  .content ul,
  .content ol {
    margin-left: 1em;
  }
}
.content ul li,
.content ol li {
  line-height: 1.71428571;
}
.content ul li:before,
.content ol li:before {
  position: absolute;
  display: inline-block;
  width: 4em;
  margin-left: -4em;
  font-size: 80%;
  line-height: 2.14285714;
  text-align: right;
  opacity: .6;
  pointer-events: none;
}
.content ul li > ul,
.content ol li > ul,
.content ul li > ol,
.content ol li > ol {
  margin-left: 1em;
  margin-bottom: 0;
}
.content ul li:before {
  content: "à¹‘";
  font-weight: bold;
  color: #705e6b;
  padding-right: .6em;
}
.content ol li:before {
  counter-increment: list;
  content: counter(list) ".";
  padding-right: .3em;
}
.content dl {
  line-height: 1.71428571;
}
@media (max-width: 640px) {
  .content dl {
    margin-left: 1em;
  }
}
.content dl dt:before {
  position: absolute;
  width: 1em;
  margin-left: -1em;
  content: "-";
  opacity: .6;
  pointer-events: none;
}
.content dl dd {
  margin-bottom: 1.8rem;
}
.content img,
.content video,
.content iframe,
.content .browser {
  display: block;
  width: calc(100% + (1.2vw * 2) + (2px * 2));
  height: calc(100% + (1.2vw * 2) + (2px * 2));
  margin: 0 calc(-1.2vw - 2px) 1.8rem;
}
@media (max-width: 1080px) {
  .content img,
  .content video,
  .content iframe,
  .content .browser {
    width: calc(100% + (8vw * 2));
    height: calc(100% + (8vw * 2));
    margin-left: -8vw;
    margin-right: -8vw;
  }
}
@media (max-width: 640px) {
  .content img,
  .content video,
  .content iframe,
  .content .browser {
    width: calc(100% + (4vw * 2));
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content img.no-enlarge,
.content video.no-enlarge,
.content iframe.no-enlarge,
.content .browser.no-enlarge {
  margin-left: 0;
  margin-right: 0;
  max-width: 100%;
  max-height: 100%;
  width: auto;
  height: auto;
}
.content blockquote {
  position: relative;
  margin-bottom: 2.8rem;
  margin-left: calc(-1.2vw - 2px);
  font-size: 90%;
}
@media (max-width: 640px) {
  .content blockquote {
    margin-left: 0;
  }
}
.content blockquote > p {
  padding-left: 1.2vw;
  border-left: 2px solid;
  padding-bottom: 1.6rem;
  margin-bottom: 0;
  opacity: .6;
}
.content blockquote > p:last-of-type {
  padding-bottom: 0;
  margin-bottom: 1.6rem;
}
@media (max-width: 640px) {
  .content blockquote > p {
    padding-left: calc(4vw - 2px);
    padding-right: 4vw;
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content blockquote footer:before,
.content blockquote footer:after {
  display: table;
  content: "";
}
.content blockquote footer:after {
  clear: both;
}
.content blockquote cite {
  float: right;
  font-style: normal;
}
.content blockquote cite:before {
  content: "\2500\2500\00a0";
}
.content hr::before {
  display: block;
  content: '';
  width: 3px;
  height: 3px;
  margin: 2em auto;
  border-radius: 50%;
  background: #000;
  box-shadow: 24px 0 0 0 #000, -24px 0 0 0 #000;
}
.content sup {
  font-size: 75%;
}
.content code,
.content pre {
  font-family: Menlo, Consolas, monospace;
  color: #293e30;
}
.content p code,
.content li code {
  word-break: break-all;
}
.content pre {
  padding: 1.2vw;
  margin-left: -1.2vw;
  margin-right: -1.2vw;
  margin-bottom: 1.8rem;
  overflow-x: auto;
  font-size: 80%;
  line-height: 1.71428571;
  background: rgba(0, 136, 255, 0.04);
  -webkit-overflow-scrolling: touch;
}
@media (max-width: 1080px) {
  .content pre {
    padding-left: 8vw;
    padding-right: 8vw;
    margin-left: -8vw;
    margin-right: -8vw;
  }
}
@media (max-width: 640px) {
  .content pre {
    padding-left: 4vw;
    padding-right: 4vw;
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content form input {
  display: block;
  width: 100%;
  padding: 1vmin 0;
  margin: 0 0 1.8rem;
  border: none;
  border-bottom: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 0;
  outline: none;
  transition: padding .2s ease;
}
.content form input:focus {
  padding: 1vmin;
  background: rgba(0, 0, 0, 0.02);
  border-color: #000;
}
.content input:focus:required:invalid:focus,
.content textarea:focus:required:invalid:focus,
.content select:focus:required:invalid:focus {
  background: rgba(255, 0, 180, 0.05);
  border-color: #ff00b4;
  box-shadow: none;
}
.content table {
  border-collapse: collapse;
  border-spacing: 0;
  font-size: 90%;
  width: 100%;
  margin-left: -1.2vw;
  margin-right: -1.2vw;
  margin-bottom: 1.8rem;
}
@media (max-width: 1080px) {
  .content table {
    width: calc(100% + (8vw * 2));
    margin-left: -8vw;
    margin-right: -8vw;
  }
}
@media (max-width: 640px) {
  .content table {
    width: calc(100% + (4vw * 2));
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content table th,
.content table td {
  padding: 0.6em 1.2vw;
}
.content table th:first-child,
.content table td:first-child {
  padding-left: 1.2vw;
}
.content table th:last-child,
.content table td:last-child {
  padding-right: 1.2vw;
}
@media (max-width: 1080px) {
  .content table th:first-child,
  .content table td:first-child {
    padding-left: 8vw;
  }
  .content table th:last-child,
  .content table td:last-child {
    padding-right: 8vw;
  }
}
@media (max-width: 640px) {
  .content table th:first-child,
  .content table td:first-child {
    padding-left: 4vw;
  }
  .content table th:last-child,
  .content table td:last-child {
    padding-right: 4vw;
  }
}
.content table th {
  border-bottom: 2px solid rgba(0, 0, 0, 0.06);
  text-align: left;
}
.content table td {
  border-top: 1px solid rgba(0, 0, 0, 0.04);
}
:lang(zh),
:lang(ja) {
  text-align: justify;
}
:lang(zh) header,
:lang(ja) header,
:lang(zh) header *,
:lang(ja) header * {
  text-align: start;
}
.leading-indent-fix {
  text-indent: -0.39em;
}
.leading-indent-fix--double-quotes {
  text-indent: -0.45em;
}
.leading-indent-fix--single-quotes {
  text-indent: -0.28em;
}
.leading-indent-fix--chinese-corner-bracket {
  text-indent: -0.6em;
}
.leading-indent-fix--chinese-white-corner-bracket {
  text-indent: -0.56em;
}
.leading-indent-fix--fullwidth-parenthesis {
  text-indent: -0.62em;
}
h1.leading-indent-fix--double-quotes {
  text-indent: -0.41em;
}
h1.leading-indent-fix--single-quotes {
  text-indent: -0.24em;
}
li .leading-indent-fix {
  text-indent: 0;
}
.post-modified-date {
  font-size: 75%;
  opacity: .5;
}
.largetype {
  font-size: 360%;
  -webkit-font-smoothing: antialiased;
  font-weight: bold;
  letter-spacing: -0.04em;
  font-size: 200%;
  margin-bottom: 1.8rem !important;
}
.browser {
  position: relative;
  padding-top: 24px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 5px 5px 0 0;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.05);
}
@media (max-width: 1080px), (max-width: 640px) {
  .browser {
    border-radius: 0;
  }
}
.browser:before {
  position: absolute;
  top: 8px;
  left: 10px;
  display: block;
  width: 8px;
  height: 8px;
  background: #fcdddf;
  border-radius: 50%;
  content: "";
  box-shadow: 16px 0 0 0 rgba(254, 240, 203, 0.96), 32px 0 0 0 rgba(177, 247, 185, 0.96), 0 0 0 1px rgba(156, 11, 21, 0.3), 16px 0 0 1px rgba(147, 108, 4, 0.3), 32px 0 0 1px rgba(11, 107, 22, 0.3);
}
.browser img {
  margin-left: 0;
  margin-right: 0;
  width: auto;
  height: auto;
  max-width: 100%;
  max-height: 100%;
  box-shadow: 0 -1px 0 0 rgba(0, 0, 0, 0.05);
}
.screenshot-mac {
  margin-left: -56px;
  margin-right: -56px;
}
@media (max-width: 1080px), (max-width: 640px) {
  .screenshot-mac {
    margin-left: 0;
    margin-right: 0;
  }
}
.note,
.store,
.download {
  padding-left: 1.2vw;
  margin-left: calc(-1.2vw - 2px);
  border-left: 2px solid #ff00b4;
}
@media (max-width: 640px) {
  .note,
  .store,
  .download {
    padding-left: calc(4vw - 2px);
    padding-right: 4vw;
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.footnotes {
  font-size: 80%;
}
.footnotes::before {
  display: block;
  content: '';
  width: 3px;
  height: 3px;
  margin: 2em auto;
  border-radius: 50%;
  background: #000;
  box-shadow: 24px 0 0 0 #000, -24px 0 0 0 #000;
}
:target [rev=footnote],
:target [rel=footnote],
:target .reversefootnote,
:target .footnote {
  color: #ff00b4;
}
.list {
  display: block;
  margin: 0 0 .4rem;
}
.list h1 {
  font-size: 360%;
  -webkit-font-smoothing: antialiased;
  font-weight: bold;
  letter-spacing: -0.04em;
  font-size: 200%;
  line-height: 1.1;
  opacity: 1;
  margin: 0;
}
@media (max-width: 640px) {
  .list h1 {
    font-size: 180%;
  }
}
@media (max-width: 640px) {
  .list .external {
    display: none;
  }
}
.external .dot {
  display: inline-block;
  width: .7rem;
  height: .7rem;
  margin: 0 .1em;
  vertical-align: middle;
  background: #000;
  border-radius: 50%;
  transition: transform .4s ease;
}
.external .dot--post {
  margin-left: 1rem;
}
.external:hover .dot,
.external:focus .dot {
  transform: scale(1.4);
}
.footer {
  padding: 0 0 16vmin;
  font-size: 75%;
  text-transform: lowercase;
}
.footer ul li {
  display: inline;
}
.footer ul li:after {
  padding: 0 .6vw;
  content: " / ";
  opacity: .3;
}
.footer ul li:last-child:after {
  content: none;
}
.post-content img {
  width: auto;
  height: auto;
  max-height: 107%;
  max-width: 107%;
  word-break: keep-all;
  padding-left: 0%;
  padding-right: 0%;
}
.gist {
  font-size: 80% !important;
}
.gist code,
.gist pre {
  padding: 0;
  color: inherit;
  background-color: transparent;
}
.gist .gist-data {
  font-family: Menlo, Consolas, monospace !important;
}
.gist .gist-data .file-data {
  font-size: 100% !important;
}
.gist .gist-data .file-data > table {
  margin-bottom: 0 !important;
}
.gist .highlight {
  font-size: 90% !important;
}
.gist .markdown-body {
  font-size: 100% !important;
  padding: 1em !important;
}
@media print {
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  body {
    padding: 10mm !important;
    margin: 0 !important;
  }
  a,
  a:visited {
    text-decoration: none;
  }
  .content header {
    min-height: 0;
    padding-bottom: 0;
  }
  .content .post-content,
  .content .page-content {
    max-width: 100% !important;
  }
  .content .post-content a[href]:after,
  .content .page-content a[href]:after {
    content: " (" attr(href) ")";
    font-weight: normal;
  }
  .content .post-content a[href^="#"]:after,
  .content .page-content a[href^="#"]:after,
  .content .post-content a[href^="javascript:"]:after,
  .content .page-content a[href^="javascript:"]:after {
    content: "";
  }
  .content .post-content abbr[title]:after,
  .content .page-content abbr[title]:after {
    content: " (" attr(title) ")";
    font-weight: normal;
  }
  pre,
  blockquote {
    page-break-inside: avoid;
  }
  thead {
    display: table-header-group;
  }
  tr,
  img {
    page-break-inside: avoid;
  }
  img {
    max-width: 100% !important;
  }
  p,
  h2,
  h3,
  h4,
  h5,
  h6 {
    orphans: 3;
    widows: 3;
  }
  h2,
  h3 {
    page-break-after: avoid;
  }
  .navigation,
  .footer {
    display: none;
  }
}
.highlight > pre,
.highlighter-rouge .highlight {
  background: rgba(77, 0, 54, 0.02);
}
.highlight code {
  color: #867982;
}
.highlight .err {
  background-color: rgba(255, 0, 180, 0.1);
}
.highlight .c {
  font-style: italic;
}
.highlight .cm {
  font-style: italic;
}
.highlight .cp {
  font-weight: bold;
}
.highlight .c1 {
  font-style: italic;
}
.highlight .cs {
  font-weight: bold;
  font-style: italic;
}
.highlight .nc {
  font-weight: bold;
}
.highlight .ne {
  font-weight: bold;
}
.highlight .nf {
  font-weight: bold;
}
.highlight .o {
  font-weight: bold;
}
.highlight .ow {
  font-weight: bold;
}
.highlight .gs {
  font-weight: bold;
}
.highlight .ge {
  font-style: italic;
}
.highlight .k {
  font-weight: bold;
}
.highlight .kt {
  font-weight: bold;
}
.highlight .kc {
  font-weight: bold;
}
.highlight .kd {
  font-weight: bold;
}
.highlight .kp {
  font-weight: bold;
}
.highlight .kr {
  font-weight: bold;
}
.highlight .err {
  color: #54324c;
}
.highlight .x {
  color: #54324d;
}
.highlight .n {
  color: #54324f;
}
.highlight .na {
  color: #543250;
}
.highlight .nb {
  color: #543252;
}
.highlight .bp {
  color: #543253;
}
.highlight .nc {
  color: #543255;
}
.highlight .no {
  color: #543156;
}
.highlight .nd {
  color: #542f56;
}
.highlight .ni {
  color: #542e56;
}
.highlight .ne {
  color: #542c56;
}
.highlight .nf {
  color: #542b56;
}
.highlight .nl {
  color: #542956;
}
.highlight .nn {
  color: #542856;
}
.highlight .nx {
  color: #542656;
}
.highlight .nt {
  color: #542556;
}
.highlight .nv {
  color: #542356;
}
.highlight .vc {
  color: #542256;
}
.highlight .vg {
  color: #542156;
}
.highlight .vi {
  color: #562156;
}
.highlight .g {
  color: #572156;
}
.highlight .gd {
  color: #592156;
}
.highlight .ge {
  color: #5a2156;
}
.highlight .gr {
  color: #5c2156;
}
.highlight .gh {
  color: #5d2156;
}
.highlight .gi {
  color: #5f2156;
}
.highlight .go {
  color: #602156;
}
.highlight .gp {
  color: #622156;
}
.highlight .gs {
  color: #632156;
}
.highlight .gu {
  color: #652155;
}
.highlight .gt {
  color: #652154;
}
.highlight .gl {
  color: #652152;
}
.highlight .k {
  color: #652151;
}
.highlight .kc {
  color: #65214f;
}
.highlight .kd {
  color: #65214e;
}
.highlight .kn {
  color: #65214c;
}
.highlight .kp {
  color: #65214b;
}
.highlight .kr {
  color: #652149;
}
.highlight .kt {
  color: #652148;
}
.highlight .kv {
  color: #652146;
}
.highlight .w {
  color: #652145;
}
.highlight .l {
  color: #652245;
}
.highlight .ld {
  color: #652445;
}
.highlight .s {
  color: #652545;
}
.highlight .sb {
  color: #652745;
}
.highlight .sc {
  color: #652845;
}
.highlight .sd {
  color: #652a45;
}
.highlight .s2 {
  color: #652b45;
}
.highlight .se {
  color: #652d45;
}
.highlight .sh {
  color: #652e45;
}
.highlight .si {
  color: #653045;
}
.highlight .sx {
  color: #653145;
}
.highlight .sr {
  color: #633245;
}
.highlight .s1 {
  color: #623245;
}
.highlight .ss {
  color: #603245;
}
.highlight .m {
  color: #5f3245;
}
.highlight .mf {
  color: #5d3245;
}
.highlight .mh {
  color: #5c3245;
}
.highlight .mi {
  color: #5a3245;
}
.highlight .il {
  color: #593245;
}
.highlight .mo {
  color: #573245;
}
.highlight .mb {
  color: #563245;
}
.highlight .mx {
  color: #543245;
}
.highlight .o {
  color: #543246;
}
.highlight .ow {
  color: #543247;
}
.highlight .p {
  color: #543249;
}
.highlight .pi {
  color: #54324a;
}
.highlight .c {
  color: #482e40;
  opacity: .6;
}
.highlight .cd {
  color: #482e40;
  opacity: .6;
}
.highlight .cm {
  color: #482e40;
  opacity: .6;
}
.highlight .cp {
  color: #482e40;
  opacity: .6;
}
.highlight .c1 {
  color: #482e40;
  opacity: .6;
}
.highlight .cs {
  color: #482e40;
  opacity: .6;
}
.highlight table,
.highlight table th,
.highlight table td,
.highlight table td pre {
  padding: 0;
  margin: 0;
  border: none;
  background: transparent;
  font-size: 100%;
}
.highlight table pre {
  overflow-x: visible;
}
.highlight table .gutter:first-child,
.highlight table .gutter:last-child {
  padding: 0 !important;
}
.highlight table .gutter .lineno {
  color: #867982;
  opacity: .5;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}
.highlight table .code {
  padding-left: 1em;
}
.content h2 {
  font-size: 148%;
  opacity: .8;
}
.content h3 {
  font-size: 120%;
  opacity: .7;
}
.content h4 {
  font-size: 84%;
  opacity: .6;
}
.content h5 {
  font-size: 72%;
  opacity: .5;
}
.content h6 {
  font-size: 60%;
  opacity: .4;
}
.amsf-title {
  text-indent: -999999px;
  line-height: 0 !important;
}
/*# sourceMappingURL=data:application/json;base64, */